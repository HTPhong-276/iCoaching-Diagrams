@startuml AcceptRejectCoachingRequest
skinparam sequenceMessageAlign center
skinparam sequenceGroupFontSize 20
skinparam sequenceGroupHeaderFontSize 20
skinparam sequence {
    ParticipantFontSize 20
    ActorFontSize 20
    DatabaseFontSize 20
    ArrowFontSize 18
} 
actor Coach as coach
participant "Front-end" as client
participant "Back-end" as server 
database "Database" as db

coach -> client++ : Click Accecpt / Reject request button

client -> server++ : PUT: api/Coach/coaching-request/{requestId}
server -> db++ : Get coaching request by requestId
db --> server : Retrived data
deactivate db

alt No data
    server --> client : Request not found
    client -> client++ : Display not found message
    deactivate client
    |||
else Has data
    alt Accept
        server -> db++ : Create contract
        deactivate db
        server --> client : Contract created message
        client -> client++ : Display message
        deactivate
        |||
    else Reject
        server -> db++ : Update request status to \n"Reject" with the reason
        deactivate
        server --> client: Update message
        deactivate
        client -> client++: Display message
        deactivate
        deactivate
        |||
    end
    |||
end 

@enduml