@startuml AcceptRejectCoachingRequest
actor Client as user
actor Coach as coach
participant "Front-end" as client
participant "Back-end" as server 
database "Database" as db

autonumber 1.1 "<b>0:"

coach -> client++ : Click Accecpt / Reject request button

client -> server++ : PUT: api/Coach/coaching-request/{requestId}
server -> db++ : Get coaching request by requestId
db --> server : Retrived data
deactivate db

alt No data
    server --> client : Request not found notification
    client -> client++ : Display error message
    deactivate client
    |||
else Has data
    alt Coach accepts
        server -> server++ : Create a contract\n(See Create contract diagram)
        deactivate 
        server -> db++ : Delete current coaching request 
        deactivate db
        server --> client : Coach accepts request message
        client -> client++ : Client confirm accept request
        deactivate
        deactivate client
        |||
    else Coach Rejects
        server -> db++ : Update request status to \n"Reject" with the reason
        deactivate server
        deactivate db
        |||
    end
    |||
end 

autonumber inc A
user -> client++ : Confirm accept/reject coaching contract
client -> server++ : PUT: client confirm contract api
alt accept
    server -> db++ : Update contract status to "Active"
else reject
    server -> db : Update contract status to "Cancel"
end
db --> server : Update contract result
server --> client : result message
client -> client++ : display message
deactivate  
@enduml