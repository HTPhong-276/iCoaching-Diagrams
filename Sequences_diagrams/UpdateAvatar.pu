@startuml UpdateAvatar
skinparam sequenceGroupFontSize 14
skinparam sequenceGroupHeaderFontSize 15
skinparam sequence {
    ParticipantFontSize 20
    ActorFontSize 20
    DatabaseFontSize 20
    ArrowFontSize 18
} 
actor "Authenticated\nUser" as user
participant "Front-end" as client
participant "Back-end" as server 
participant "Storage service" as imgCloud
database "Database" as db


user -> client++ : Click update Avatar
client -> server++ : PUT: api/User/avatar
server -> imgCloud++ : Save avatar
imgCloud --> server : Url and publicId
deactivate
server -> db++ : Update avatar url and publicId
deactivate

alt Success
    
    server --> client : Update message
    client -> client++ : Display message
    deactivate
else Fail
    server --> client : Error result message
    deactivate
    client -> client++ : Display error
    deactivate
    deactivate
end
@enduml